<?php

/**
 * @file
 * Contains Liofa pledges code.
 */

use Drupal\Core\Cache\Cache;
use Drupal\Core\Entity\EntityInterface;
use Drupal\liofa_pledges\Controller\LiofaPledgesController;
use Drupal\webform\WebformSubmissionInterface;

/**
 * Implements hook_ENTITY_TYPE_insert() for webform_submission entities.
 */
function liofa_pledges_webform_submission_insert(WebformSubmissionInterface $webform_submission) {
  if ($webform_submission->getWebform()->id() == 'sign_up') {
    $config = \Drupal::configFactory()
      ->getEditable('liofa_pledges.countsettings');

    $onsite_pledges = intval($config->get('pledge_count_submissions'));
    $onsite_pledges++;

    $config
      ->set('pledge_count_submissions', $onsite_pledges)
      ->save();

    // Update pledge count totals.
    LiofaPledgesController::generateTotals();

    // Invalidate custom cache tag.
    Cache::invalidateTags(['liofa_pledges']);
  }
}

/**
 * Implements hook_ENTITY_presave() for nodes.
 */
function liofa_pledges_node_presave(EntityInterface $entity) {
  // Update the Bulk pledges added through the content type. Only if published.
  if ($entity->bundle() === 'bulk_pledges' && $entity->isPublished()) {
    // Update pledge count totals.
    LiofaPledgesController::generateTotals();

    // Invalidate custom cache tag.
    Cache::invalidateTags(['liofa_pledges']);
  }
}

/**
 * Implements hook_preprocess_block().
 * Getting the liofa_pledges overall count and storing it in a variable to use
 * in
 * themes/liofa_theme/templates/block/block--liofa-theme-liofapledgesblock.html.twig.
 */
function liofa_pledges_preprocess_block(&$variables) {
  if (!empty($variables['elements']['#id']) && $variables['elements']['#id'] == 'liofa_theme_liofapledgesblock') {
    $variables['pledge_count'] = number_format(\Drupal::config('liofa_pledges.countsettings')
      ->get('pledge_count_total'));
    // Custom cache tag for pledge counts.
    $variables['#cache']['tags'][] = 'liofa_pledges';
  }
}
